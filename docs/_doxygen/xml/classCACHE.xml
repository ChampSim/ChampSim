<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classCACHE" kind="class" language="C++" prot="public">
    <compoundname>CACHE</compoundname>
    <basecompoundref refid="classchampsim_1_1operable" prot="public" virt="non-virtual">champsim::operable</basecompoundref>
    <innerclass refid="structCACHE_1_1BLOCK" prot="private">CACHE::BLOCK</innerclass>
    <innerclass refid="classCACHE_1_1Builder" prot="public">CACHE::Builder</innerclass>
    <innerclass refid="classCACHE_1_1builder__conversion__tag" prot="public">CACHE::builder_conversion_tag</innerclass>
    <innerclass refid="structCACHE_1_1module__concept" prot="public">CACHE::module_concept</innerclass>
    <innerclass refid="structCACHE_1_1module__model" prot="public">CACHE::module_model</innerclass>
    <innerclass refid="structCACHE_1_1mshr__type" prot="private">CACHE::mshr_type</innerclass>
    <innerclass refid="structCACHE_1_1tag__lookup__type" prot="private">CACHE::tag_lookup_type</innerclass>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classCACHE_1ab9cb60c96e95cc8ee3ca429b6b3ec7ba" prot="private" static="no" strong="no">
        <type></type>
        <name>FILL_LEVEL</name>
        <qualifiedname>CACHE::FILL_LEVEL</qualifiedname>
        <enumvalue id="classCACHE_1ab9cb60c96e95cc8ee3ca429b6b3ec7baa8d3ba584008a1cf7a6bba5c03848bc00" prot="private">
          <name>FILL_L1</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCACHE_1ab9cb60c96e95cc8ee3ca429b6b3ec7baa8b4c1a02046069411563043241013ac6" prot="private">
          <name>FILL_L2</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCACHE_1ab9cb60c96e95cc8ee3ca429b6b3ec7baa64edf6164db441f6a2ebf25870b6fe47" prot="private">
          <name>FILL_LLC</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCACHE_1ab9cb60c96e95cc8ee3ca429b6b3ec7baaa6539f3d0b137ec97dd4e3e8586e4c6f" prot="private">
          <name>FILL_DRC</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCACHE_1ab9cb60c96e95cc8ee3ca429b6b3ec7baa20e4843cfcf376f4891354a9d6716ad0" prot="private">
          <name>FILL_DRAM</name>
          <initializer>= 16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="58" column="3" bodyfile="/github/workspace/inc/cache.h" bodystart="59" bodyend="60"/>
      </memberdef>
      <memberdef kind="typedef" id="classCACHE_1a78204ba0de94f2dd614c3ebed67accf7" prot="private" static="no">
        <type><ref refid="classchampsim_1_1channel" kindref="compound">champsim::channel</ref></type>
        <definition>using CACHE::channel_type =  champsim::channel</definition>
        <argsstring></argsstring>
        <name>channel_type</name>
        <qualifiedname>CACHE::channel_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="62" column="3" bodyfile="/github/workspace/inc/cache.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCACHE_1a4a2db5c70228c41439df5bfd426ab22b" prot="private" static="no">
        <type>typename channel_type::request_type</type>
        <definition>using CACHE::request_type =  typename channel_type::request_type</definition>
        <argsstring></argsstring>
        <name>request_type</name>
        <qualifiedname>CACHE::request_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="63" column="3" bodyfile="/github/workspace/inc/cache.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCACHE_1a455086b84711f60dc9ebff7468ac043b" prot="private" static="no">
        <type>typename channel_type::response_type</type>
        <definition>using CACHE::response_type =  typename channel_type::response_type</definition>
        <argsstring></argsstring>
        <name>response_type</name>
        <qualifiedname>CACHE::response_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="64" column="3" bodyfile="/github/workspace/inc/cache.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCACHE_1aad85947f3ad88b0b4e3f5d9382a61ad4" prot="private" static="no">
        <type>std::vector&lt; BLOCK &gt;</type>
        <definition>using CACHE::set_type =  std::vector&lt;BLOCK&gt;</definition>
        <argsstring></argsstring>
        <name>set_type</name>
        <qualifiedname>CACHE::set_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="141" column="3" bodyfile="/github/workspace/inc/cache.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classCACHE_1af3b7a69f823e3c979a3e1c1f2b56a73f" prot="public" static="no">
        <type><ref refid="structcache__stats" kindref="compound">cache_stats</ref></type>
        <definition>using CACHE::stats_type =  cache_stats</definition>
        <argsstring></argsstring>
        <name>stats_type</name>
        <qualifiedname>CACHE::stats_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="176" column="3" bodyfile="/github/workspace/inc/cache.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCACHE_1a42c5d902ce8aa2674b03b7b334342521" prot="private" static="no" mutable="no">
        <type>std::deque&lt; tag_lookup_type &gt;</type>
        <definition>std::deque&lt;tag_lookup_type&gt; CACHE::internal_PQ</definition>
        <argsstring></argsstring>
        <name>internal_PQ</name>
        <qualifiedname>CACHE::internal_PQ</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="153" column="14" bodyfile="/github/workspace/inc/cache.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCACHE_1aebe3a0623dbafd3228fd1dc4c697bf3b" prot="private" static="no" mutable="no">
        <type>std::deque&lt; tag_lookup_type &gt;</type>
        <definition>std::deque&lt;tag_lookup_type&gt; CACHE::inflight_tag_check</definition>
        <argsstring></argsstring>
        <name>inflight_tag_check</name>
        <qualifiedname>CACHE::inflight_tag_check</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="154" column="14" bodyfile="/github/workspace/inc/cache.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCACHE_1a1d755dff58db1dbf62c3f96b7e772128" prot="private" static="no" mutable="no">
        <type>std::deque&lt; tag_lookup_type &gt;</type>
        <definition>std::deque&lt;tag_lookup_type&gt; CACHE::translation_stash</definition>
        <argsstring></argsstring>
        <name>translation_stash</name>
        <qualifiedname>CACHE::translation_stash</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="155" column="14" bodyfile="/github/workspace/inc/cache.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classCACHE_1af481d8b5e2c96fb1edc999f0d11a5588" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classchampsim_1_1channel" kindref="compound">channel_type</ref> * &gt;</type>
        <definition>std::vector&lt;channel_type*&gt; CACHE::upper_levels</definition>
        <argsstring></argsstring>
        <name>upper_levels</name>
        <qualifiedname>CACHE::upper_levels</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="158" column="15" bodyfile="/github/workspace/inc/cache.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCACHE_1a8478a2e23a8945e0c7d90d1a73503529" prot="public" static="no" mutable="no">
        <type><ref refid="classchampsim_1_1channel" kindref="compound">channel_type</ref> *</type>
        <definition>channel_type* CACHE::lower_level</definition>
        <argsstring></argsstring>
        <name>lower_level</name>
        <qualifiedname>CACHE::lower_level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="159" column="16" bodyfile="/github/workspace/inc/cache.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCACHE_1a406c27218eb3db3b14e1044aee53424e" prot="public" static="no" mutable="no">
        <type><ref refid="classchampsim_1_1channel" kindref="compound">channel_type</ref> *</type>
        <definition>channel_type* CACHE::lower_translate</definition>
        <argsstring></argsstring>
        <name>lower_translate</name>
        <qualifiedname>CACHE::lower_translate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="160" column="16" bodyfile="/github/workspace/inc/cache.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCACHE_1a87b90ab65ad1ac0fb1c25d24e71bfdb3" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t CACHE::cpu</definition>
        <argsstring></argsstring>
        <name>cpu</name>
        <qualifiedname>CACHE::cpu</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="162" column="12" bodyfile="/github/workspace/inc/cache.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCACHE_1a677946ec359a5d63efb5fca5d8f796cd" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string CACHE::NAME</definition>
        <argsstring></argsstring>
        <name>NAME</name>
        <qualifiedname>CACHE::NAME</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="163" column="21" bodyfile="/github/workspace/inc/cache.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCACHE_1a27f929e7499b4380bb1eb137789ecc15" prot="public" static="no" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t CACHE::NUM_SET</definition>
        <argsstring></argsstring>
        <name>NUM_SET</name>
        <qualifiedname>CACHE::NUM_SET</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="164" column="18" bodyfile="/github/workspace/inc/cache.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCACHE_1ab1d55261a8d0cf765fd90115c9a59679" prot="public" static="no" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t CACHE::NUM_WAY</definition>
        <argsstring></argsstring>
        <name>NUM_WAY</name>
        <qualifiedname>CACHE::NUM_WAY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="164" column="26" bodyfile="/github/workspace/inc/cache.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCACHE_1a1fe14de255f47173f84d1f82b0078bd9" prot="public" static="no" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t CACHE::MSHR_SIZE</definition>
        <argsstring></argsstring>
        <name>MSHR_SIZE</name>
        <qualifiedname>CACHE::MSHR_SIZE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="164" column="34" bodyfile="/github/workspace/inc/cache.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCACHE_1a14f18b98393b87114d07d839fcaf3e04" prot="public" static="no" mutable="no">
        <type>const std::size_t</type>
        <definition>const std::size_t CACHE::PQ_SIZE</definition>
        <argsstring></argsstring>
        <name>PQ_SIZE</name>
        <qualifiedname>CACHE::PQ_SIZE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="165" column="21" bodyfile="/github/workspace/inc/cache.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCACHE_1a0c3dec89dffe55649e0fa0d092681f04" prot="public" static="no" mutable="no">
        <type>const uint64_t</type>
        <definition>const uint64_t CACHE::HIT_LATENCY</definition>
        <argsstring></argsstring>
        <name>HIT_LATENCY</name>
        <qualifiedname>CACHE::HIT_LATENCY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="166" column="18" bodyfile="/github/workspace/inc/cache.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCACHE_1afd1154a8919e441f346146c3e505b759" prot="public" static="no" mutable="no">
        <type>const uint64_t</type>
        <definition>const uint64_t CACHE::FILL_LATENCY</definition>
        <argsstring></argsstring>
        <name>FILL_LATENCY</name>
        <qualifiedname>CACHE::FILL_LATENCY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="166" column="30" bodyfile="/github/workspace/inc/cache.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCACHE_1af07c41cf7715f7604e9aafe07df2e5c8" prot="public" static="no" mutable="no">
        <type>const unsigned</type>
        <definition>const unsigned CACHE::OFFSET_BITS</definition>
        <argsstring></argsstring>
        <name>OFFSET_BITS</name>
        <qualifiedname>CACHE::OFFSET_BITS</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="167" column="18" bodyfile="/github/workspace/inc/cache.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCACHE_1a1a5825ce9bc36f284a96b5ce14528c5d" prot="public" static="no" mutable="no">
        <type>set_type</type>
        <definition>set_type CACHE::block</definition>
        <argsstring></argsstring>
        <name>block</name>
        <qualifiedname>CACHE::block</qualifiedname>
        <initializer>{NUM_SET * NUM_WAY}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="168" column="12" bodyfile="/github/workspace/inc/cache.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCACHE_1a98de6ac4747dd00fe5381a7843c46fbe" prot="public" static="no" mutable="no">
        <type>const long int</type>
        <definition>const long int CACHE::MAX_TAG</definition>
        <argsstring></argsstring>
        <name>MAX_TAG</name>
        <qualifiedname>CACHE::MAX_TAG</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="169" column="18" bodyfile="/github/workspace/inc/cache.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCACHE_1a81cf8431c2669b2ade7b3867b8b2478d" prot="public" static="no" mutable="no">
        <type>const long int</type>
        <definition>const long int CACHE::MAX_FILL</definition>
        <argsstring></argsstring>
        <name>MAX_FILL</name>
        <qualifiedname>CACHE::MAX_FILL</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="169" column="26" bodyfile="/github/workspace/inc/cache.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCACHE_1ae730fa75d6aa15bfa41b2e48e1b9fd69" prot="public" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool CACHE::prefetch_as_load</definition>
        <argsstring></argsstring>
        <name>prefetch_as_load</name>
        <qualifiedname>CACHE::prefetch_as_load</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="170" column="14" bodyfile="/github/workspace/inc/cache.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCACHE_1a099df667e7b83c3503aa7b39b6628344" prot="public" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool CACHE::match_offset_bits</definition>
        <argsstring></argsstring>
        <name>match_offset_bits</name>
        <qualifiedname>CACHE::match_offset_bits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="171" column="14" bodyfile="/github/workspace/inc/cache.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCACHE_1ad23c22d2243f6f1f599a244a2661f69b" prot="public" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool CACHE::virtual_prefetch</definition>
        <argsstring></argsstring>
        <name>virtual_prefetch</name>
        <qualifiedname>CACHE::virtual_prefetch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="172" column="14" bodyfile="/github/workspace/inc/cache.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCACHE_1a95c49295093926a4faa8b3bc922ec13a" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CACHE::ever_seen_data</definition>
        <argsstring></argsstring>
        <name>ever_seen_data</name>
        <qualifiedname>CACHE::ever_seen_data</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="173" column="8" bodyfile="/github/workspace/inc/cache.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCACHE_1a1de38964a4af2d0af3f1dfe029da93c7" prot="public" static="no" mutable="no">
        <type>const unsigned</type>
        <definition>const unsigned CACHE::pref_activate_mask</definition>
        <argsstring></argsstring>
        <name>pref_activate_mask</name>
        <qualifiedname>CACHE::pref_activate_mask</qualifiedname>
        <initializer>= (1 &lt;&lt; champsim::to_underlying(access_type::LOAD)) | (1 &lt;&lt; champsim::to_underlying(access_type::PREFETCH))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="174" column="18" bodyfile="/github/workspace/inc/cache.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCACHE_1ae7c7923567056ce90cd550b0d9f49291" prot="public" static="no" mutable="no">
        <type><ref refid="structcache__stats" kindref="compound">stats_type</ref></type>
        <definition>stats_type CACHE::sim_stats</definition>
        <argsstring></argsstring>
        <name>sim_stats</name>
        <qualifiedname>CACHE::sim_stats</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="178" column="14" bodyfile="/github/workspace/inc/cache.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCACHE_1aa0c04817e806ad2fe3928c83ffd29bc9" prot="public" static="no" mutable="no">
        <type><ref refid="structcache__stats" kindref="compound">stats_type</ref></type>
        <definition>stats_type CACHE::roi_stats</definition>
        <argsstring></argsstring>
        <name>roi_stats</name>
        <qualifiedname>CACHE::roi_stats</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="178" column="24" bodyfile="/github/workspace/inc/cache.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCACHE_1a3149ef2fa092ebba6ac4191a1d57a535" prot="public" static="no" mutable="no">
        <type>std::deque&lt; mshr_type &gt;</type>
        <definition>std::deque&lt;mshr_type&gt; CACHE::MSHR</definition>
        <argsstring></argsstring>
        <name>MSHR</name>
        <qualifiedname>CACHE::MSHR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="180" column="14" bodyfile="/github/workspace/inc/cache.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCACHE_1a33b719d0a8b4c1d27e8568b401b9f005" prot="public" static="no" mutable="no">
        <type>std::deque&lt; mshr_type &gt;</type>
        <definition>std::deque&lt;mshr_type&gt; CACHE::inflight_writes</definition>
        <argsstring></argsstring>
        <name>inflight_writes</name>
        <qualifiedname>CACHE::inflight_writes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="181" column="14" bodyfile="/github/workspace/inc/cache.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCACHE_1aa63ecffc0a172a396cb07b25f709338e" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structCACHE_1_1module__concept" kindref="compound">module_concept</ref> &gt;</type>
        <definition>std::unique_ptr&lt;module_concept&gt; CACHE::module_pimpl</definition>
        <argsstring></argsstring>
        <name>module_pimpl</name>
        <qualifiedname>CACHE::module_pimpl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="261" column="19" bodyfile="/github/workspace/inc/cache.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classCACHE_1a82604fbde640dd4dd79656806a255692" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CACHE::try_hit</definition>
        <argsstring>(const tag_lookup_type &amp;handle_pkt)</argsstring>
        <name>try_hit</name>
        <qualifiedname>CACHE::try_hit</qualifiedname>
        <param>
          <type>const tag_lookup_type &amp;</type>
          <declname>handle_pkt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="118" column="8" bodyfile="/github/workspace/src/cache.cc" bodystart="167" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1a391c1c17b56ca36f420d3008ba2e5b4a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CACHE::handle_fill</definition>
        <argsstring>(const mshr_type &amp;fill_mshr)</argsstring>
        <name>handle_fill</name>
        <qualifiedname>CACHE::handle_fill</qualifiedname>
        <param>
          <type>const mshr_type &amp;</type>
          <declname>fill_mshr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="119" column="8" bodyfile="/github/workspace/src/cache.cc" bodystart="82" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1a5604d996a7478bdb0a1a83cb39b95779" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CACHE::handle_miss</definition>
        <argsstring>(const tag_lookup_type &amp;handle_pkt)</argsstring>
        <name>handle_miss</name>
        <qualifiedname>CACHE::handle_miss</qualifiedname>
        <param>
          <type>const tag_lookup_type &amp;</type>
          <declname>handle_pkt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="120" column="8" bodyfile="/github/workspace/src/cache.cc" bodystart="215" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1a2fae52694473b37e9ad5b06b45543472" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CACHE::handle_write</definition>
        <argsstring>(const tag_lookup_type &amp;handle_pkt)</argsstring>
        <name>handle_write</name>
        <qualifiedname>CACHE::handle_write</qualifiedname>
        <param>
          <type>const tag_lookup_type &amp;</type>
          <declname>handle_pkt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="121" column="8" bodyfile="/github/workspace/src/cache.cc" bodystart="294" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1a772625750bfb8211c2aab0c38e608bf3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CACHE::finish_packet</definition>
        <argsstring>(const response_type &amp;packet)</argsstring>
        <name>finish_packet</name>
        <qualifiedname>CACHE::finish_packet</qualifiedname>
        <param>
          <type>const response_type &amp;</type>
          <declname>packet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="122" column="8" bodyfile="/github/workspace/src/cache.cc" bodystart="498" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1a616add283b725d66cec426ea86055b49" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CACHE::finish_translation</definition>
        <argsstring>(const response_type &amp;packet)</argsstring>
        <name>finish_translation</name>
        <qualifiedname>CACHE::finish_translation</qualifiedname>
        <param>
          <type>const response_type &amp;</type>
          <declname>packet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="123" column="8" bodyfile="/github/workspace/src/cache.cc" bodystart="527" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1a97810aaac2b817e65999dd0ccfc67fba" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CACHE::issue_translation</definition>
        <argsstring>()</argsstring>
        <name>issue_translation</name>
        <qualifiedname>CACHE::issue_translation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="125" column="8" bodyfile="/github/workspace/src/cache.cc" bodystart="554" bodyend="585"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1a76dd4375431989a6e580ee59728e1eb7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; set_type::iterator, set_type::iterator &gt;</type>
        <definition>auto CACHE::get_set_span</definition>
        <argsstring>(uint64_t address)</argsstring>
        <name>get_set_span</name>
        <qualifiedname>CACHE::get_set_span</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="143" column="13" bodyfile="/github/workspace/src/cache.cc" bodystart="435" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1a0973bfa2b0dc1d3e4cf203fe28d2299a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; set_type::const_iterator, set_type::const_iterator &gt;</type>
        <definition>auto CACHE::get_set_span</definition>
        <argsstring>(uint64_t address) const</argsstring>
        <name>get_set_span</name>
        <qualifiedname>CACHE::get_set_span</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="144" column="13" bodyfile="/github/workspace/src/cache.cc" bodystart="442" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1a46e64eaf165a1fcb109d149d4e5421a0" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CACHE::get_set_index</definition>
        <argsstring>(uint64_t address) const</argsstring>
        <name>get_set_index</name>
        <qualifiedname>CACHE::get_set_index</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="145" column="15" bodyfile="/github/workspace/src/cache.cc" bodystart="426" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1ad892fc4f00fd2b642da356b696403eb9" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CACHE::should_activate_prefetcher</definition>
        <argsstring>(const T &amp;pkt) const</argsstring>
        <name>should_activate_prefetcher</name>
        <qualifiedname>CACHE::should_activate_prefetcher</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>pkt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="148" column="8" bodyfile="/github/workspace/src/cache.cc" bodystart="739" bodyend="742"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1aae5a7e934e9bcdd1fa6cb25ca1bf5e35" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto CACHE::initiate_tag_check</definition>
        <argsstring>(champsim::channel *ul=nullptr)</argsstring>
        <name>initiate_tag_check</name>
        <qualifiedname>CACHE::initiate_tag_check</qualifiedname>
        <param>
          <type><ref refid="classchampsim_1_1channel" kindref="compound">champsim::channel</ref> *</type>
          <declname>ul</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="151" column="8" bodyfile="/github/workspace/src/cache.cc" bodystart="311" bodyend="329"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCACHE_1a6821fd53c327dcdfd82af0dfabf9196a" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>long</type>
        <definition>long CACHE::operate</definition>
        <argsstring>() override final</argsstring>
        <name>operate</name>
        <qualifiedname>CACHE::operate</qualifiedname>
        <reimplements refid="classchampsim_1_1operable_1ad061945ce3179fa00d77a6e30e97ad84">operate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="183" column="8" bodyfile="/github/workspace/src/cache.cc" bodystart="331" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1a848cb30ace81c02c7c207072e327d3fe" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void CACHE::initialize</definition>
        <argsstring>() override final</argsstring>
        <name>initialize</name>
        <qualifiedname>CACHE::initialize</qualifiedname>
        <reimplements refid="classchampsim_1_1operable_1aadc42488425d7b667c423bb30198c827">initialize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="185" column="8" bodyfile="/github/workspace/src/cache.cc" bodystart="673" bodyend="677"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1af1498c217bccc9c410f66e75e8a7f322" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void CACHE::begin_phase</definition>
        <argsstring>() override final</argsstring>
        <name>begin_phase</name>
        <qualifiedname>CACHE::begin_phase</qualifiedname>
        <reimplements refid="classchampsim_1_1operable_1a4f44b35a5dbd9855d7dde0fcd45e39d4">begin_phase</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="186" column="8" bodyfile="/github/workspace/src/cache.cc" bodystart="679" bodyend="694"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1aa4779e21b680716dac8f917bacbd7a51" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void CACHE::end_phase</definition>
        <argsstring>(unsigned cpu) override final</argsstring>
        <name>end_phase</name>
        <qualifiedname>CACHE::end_phase</qualifiedname>
        <reimplements refid="classchampsim_1_1operable_1a2942511f46fbf590b7531d299fe60dac">end_phase</reimplements>
        <param>
          <type>unsigned</type>
          <declname>cpu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="187" column="8" bodyfile="/github/workspace/src/cache.cc" bodystart="696" bodyend="736"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1ab8ec0ef69574e8e4ab017be3e07511b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CACHE::get_occupancy</definition>
        <argsstring>(uint8_t queue_type, uint64_t address)</argsstring>
        <name>get_occupancy</name>
        <qualifiedname>CACHE::get_occupancy</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>queue_type</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="189" column="16" bodyfile="/github/workspace/src/cache.cc" bodystart="612" bodyend="617"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1a4174c447645b1e97325b88dab56a5882" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CACHE::get_size</definition>
        <argsstring>(uint8_t queue_type, uint64_t address)</argsstring>
        <name>get_size</name>
        <qualifiedname>CACHE::get_size</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>queue_type</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="191" column="16" bodyfile="/github/workspace/src/cache.cc" bodystart="645" bodyend="650"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1a5effc7c9117ed79a7ee3f8ac21e481b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CACHE::get_mshr_occupancy</definition>
        <argsstring>() const</argsstring>
        <name>get_mshr_occupancy</name>
        <qualifiedname>CACHE::get_mshr_occupancy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="194" column="15" bodyfile="/github/workspace/src/cache.cc" bodystart="587" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1a2802efa6a063d383493a13e4e546341f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CACHE::get_mshr_size</definition>
        <argsstring>() const</argsstring>
        <name>get_mshr_size</name>
        <qualifiedname>CACHE::get_mshr_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="195" column="15" bodyfile="/github/workspace/src/cache.cc" bodystart="620" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1af3a2dce54bc7ad24bd894279413a2cc4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double CACHE::get_mshr_occupancy_ratio</definition>
        <argsstring>() const</argsstring>
        <name>get_mshr_occupancy_ratio</name>
        <qualifiedname>CACHE::get_mshr_occupancy_ratio</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="196" column="10" bodyfile="/github/workspace/src/cache.cc" bodystart="665" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1afa8c11ede4e821451f9ffd473f51be0f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::size_t &gt;</type>
        <definition>std::vector&lt; std::size_t &gt; CACHE::get_rq_occupancy</definition>
        <argsstring>() const</argsstring>
        <name>get_rq_occupancy</name>
        <qualifiedname>CACHE::get_rq_occupancy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="198" column="15" bodyfile="/github/workspace/src/cache.cc" bodystart="589" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1ad90a557929fb3122202adba9b88e2013" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::size_t &gt;</type>
        <definition>std::vector&lt; std::size_t &gt; CACHE::get_rq_size</definition>
        <argsstring>() const</argsstring>
        <name>get_rq_size</name>
        <qualifiedname>CACHE::get_rq_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="199" column="15" bodyfile="/github/workspace/src/cache.cc" bodystart="622" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1ab4e62fa492835cb6b487271eb4dc1698" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; CACHE::get_rq_occupancy_ratio</definition>
        <argsstring>() const</argsstring>
        <name>get_rq_occupancy_ratio</name>
        <qualifiedname>CACHE::get_rq_occupancy_ratio</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="200" column="15" bodyfile="/github/workspace/src/cache.cc" bodystart="667" bodyend="667"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1a35f31927f50d224a6c5769b99106c060" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::size_t &gt;</type>
        <definition>std::vector&lt; std::size_t &gt; CACHE::get_wq_occupancy</definition>
        <argsstring>() const</argsstring>
        <name>get_wq_occupancy</name>
        <qualifiedname>CACHE::get_wq_occupancy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="202" column="15" bodyfile="/github/workspace/src/cache.cc" bodystart="596" bodyend="601"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1a004038352376e652725b7d8ee4c22466" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::size_t &gt;</type>
        <definition>std::vector&lt; std::size_t &gt; CACHE::get_wq_size</definition>
        <argsstring>() const</argsstring>
        <name>get_wq_size</name>
        <qualifiedname>CACHE::get_wq_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="203" column="15" bodyfile="/github/workspace/src/cache.cc" bodystart="629" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1ab4a8c312b7e90a5cd06531a0f72f2afc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; CACHE::get_wq_occupancy_ratio</definition>
        <argsstring>() const</argsstring>
        <name>get_wq_occupancy_ratio</name>
        <qualifiedname>CACHE::get_wq_occupancy_ratio</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="204" column="15" bodyfile="/github/workspace/src/cache.cc" bodystart="669" bodyend="669"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1ae5ff96522301509be92d0b7a9e59ebd6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::size_t &gt;</type>
        <definition>std::vector&lt; std::size_t &gt; CACHE::get_pq_occupancy</definition>
        <argsstring>() const</argsstring>
        <name>get_pq_occupancy</name>
        <qualifiedname>CACHE::get_pq_occupancy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="206" column="15" bodyfile="/github/workspace/src/cache.cc" bodystart="603" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1ad356b90318675c49c0c441e6f24c510a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::size_t &gt;</type>
        <definition>std::vector&lt; std::size_t &gt; CACHE::get_pq_size</definition>
        <argsstring>() const</argsstring>
        <name>get_pq_size</name>
        <qualifiedname>CACHE::get_pq_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="207" column="15" bodyfile="/github/workspace/src/cache.cc" bodystart="636" bodyend="642"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1a1bb8bae8dd2f827aea18cc2e217433e9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; CACHE::get_pq_occupancy_ratio</definition>
        <argsstring>() const</argsstring>
        <name>get_pq_occupancy_ratio</name>
        <qualifiedname>CACHE::get_pq_occupancy_ratio</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="208" column="15" bodyfile="/github/workspace/src/cache.cc" bodystart="671" bodyend="671"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1a737969e27f8f4c66729a4e04c889bdbc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t CACHE::get_set</definition>
        <argsstring>(uint64_t address) const</argsstring>
        <name>get_set</name>
        <qualifiedname>CACHE::get_set</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="210" column="13" bodyfile="/github/workspace/src/cache.cc" bodystart="423" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1a7ef6f696d5d075cfdb5e34501451a7e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t CACHE::get_way</definition>
        <argsstring>(uint64_t address, uint64_t set) const</argsstring>
        <name>get_way</name>
        <qualifiedname>CACHE::get_way</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="211" column="13" bodyfile="/github/workspace/src/cache.cc" bodystart="450" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1a6e22bb8c4f84ee73e974cb5173bcc536" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t CACHE::invalidate_entry</definition>
        <argsstring>(uint64_t inval_addr)</argsstring>
        <name>invalidate_entry</name>
        <qualifiedname>CACHE::invalidate_entry</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>inval_addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="213" column="12" bodyfile="/github/workspace/src/cache.cc" bodystart="458" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1aa64044841983110bb83e1823c77e4ca5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CACHE::prefetch_line</definition>
        <argsstring>(uint64_t pf_addr, bool fill_this_level, uint32_t prefetch_metadata)</argsstring>
        <name>prefetch_line</name>
        <qualifiedname>CACHE::prefetch_line</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>pf_addr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fill_this_level</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>prefetch_metadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="214" column="7" bodyfile="/github/workspace/src/cache.cc" bodystart="470" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1a21e31b7bc30707c7020397e3b710493e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CACHE::prefetch_line</definition>
        <argsstring>(uint64_t ip, uint64_t base_addr, uint64_t pf_addr, bool fill_this_level, uint32_t prefetch_metadata)</argsstring>
        <name>prefetch_line</name>
        <qualifiedname>CACHE::prefetch_line</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>base_addr</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>pf_addr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fill_this_level</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>prefetch_metadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="217" column="3" bodyfile="/github/workspace/src/cache.cc" bodystart="492" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1aaab1fd23d8a1c4dafab1d69c6c9f46b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void CACHE::print_deadlock</definition>
        <argsstring>() override</argsstring>
        <name>print_deadlock</name>
        <qualifiedname>CACHE::print_deadlock</qualifiedname>
        <reimplements refid="classchampsim_1_1operable_1a19019841fc4b9a0cb245552c1425bece">print_deadlock</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="219" column="8" bodyfile="/github/workspace/src/cache.cc" bodystart="745" bodyend="772"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1ae6de901f283e78cb39f09c67af106786" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CACHE::impl_prefetcher_initialize</definition>
        <argsstring>()</argsstring>
        <name>impl_prefetcher_initialize</name>
        <qualifiedname>CACHE::impl_prefetcher_initialize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="263" column="8" bodyfile="/github/workspace/inc/cache.h" bodystart="263" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1a3a6ab640478c04c8cdbdd48e91b4b7ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t CACHE::impl_prefetcher_cache_operate</definition>
        <argsstring>(uint64_t addr, uint64_t ip, uint8_t cache_hit, bool useful_prefetch, uint8_t type, uint32_t metadata_in)</argsstring>
        <name>impl_prefetcher_cache_operate</name>
        <qualifiedname>CACHE::impl_prefetcher_cache_operate</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cache_hit</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>useful_prefetch</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>metadata_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="264" column="12" bodyfile="/github/workspace/inc/cache.h" bodystart="264" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1af77461d96caf4f3ff60eda6438434e14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t CACHE::impl_prefetcher_cache_fill</definition>
        <argsstring>(uint64_t addr, uint32_t set, uint32_t way, uint8_t prefetch, uint64_t evicted_addr, uint32_t metadata_in)</argsstring>
        <name>impl_prefetcher_cache_fill</name>
        <qualifiedname>CACHE::impl_prefetcher_cache_fill</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>set</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>way</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>prefetch</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>evicted_addr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>metadata_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="268" column="12" bodyfile="/github/workspace/inc/cache.h" bodystart="268" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1aea29b1ce8df1ddbd3d27c8217ee05e7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CACHE::impl_prefetcher_cycle_operate</definition>
        <argsstring>()</argsstring>
        <name>impl_prefetcher_cycle_operate</name>
        <qualifiedname>CACHE::impl_prefetcher_cycle_operate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="272" column="8" bodyfile="/github/workspace/inc/cache.h" bodystart="272" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1a9b7b4f963b9dd750e09359e735bf9f54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CACHE::impl_prefetcher_final_stats</definition>
        <argsstring>()</argsstring>
        <name>impl_prefetcher_final_stats</name>
        <qualifiedname>CACHE::impl_prefetcher_final_stats</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="273" column="8" bodyfile="/github/workspace/inc/cache.h" bodystart="273" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1a11c95fe1e0fba71a12f7b719274df499" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CACHE::impl_prefetcher_branch_operate</definition>
        <argsstring>(uint64_t ip, uint8_t branch_type, uint64_t branch_target)</argsstring>
        <name>impl_prefetcher_branch_operate</name>
        <qualifiedname>CACHE::impl_prefetcher_branch_operate</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>branch_type</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>branch_target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="274" column="8" bodyfile="/github/workspace/inc/cache.h" bodystart="274" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1a1cbd414b6596affdb8a0c0908418f60c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CACHE::impl_initialize_replacement</definition>
        <argsstring>()</argsstring>
        <name>impl_initialize_replacement</name>
        <qualifiedname>CACHE::impl_initialize_replacement</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="279" column="8" bodyfile="/github/workspace/inc/cache.h" bodystart="279" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1af05cdde16e4d5442b4b6d7c33f590e22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t CACHE::impl_find_victim</definition>
        <argsstring>(uint32_t triggering_cpu, uint64_t instr_id, uint32_t set, const BLOCK *current_set, uint64_t ip, uint64_t full_addr, uint32_t type)</argsstring>
        <name>impl_find_victim</name>
        <qualifiedname>CACHE::impl_find_victim</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>triggering_cpu</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>instr_id</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>set</declname>
        </param>
        <param>
          <type>const BLOCK *</type>
          <declname>current_set</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>full_addr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="280" column="12" bodyfile="/github/workspace/inc/cache.h" bodystart="280" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1abca46ad24c1b404f7e8a8715039c8644" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CACHE::impl_update_replacement_state</definition>
        <argsstring>(uint32_t triggering_cpu, uint32_t set, uint32_t way, uint64_t full_addr, uint64_t ip, uint64_t victim_addr, uint32_t type, uint8_t hit)</argsstring>
        <name>impl_update_replacement_state</name>
        <qualifiedname>CACHE::impl_update_replacement_state</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>triggering_cpu</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>set</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>way</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>full_addr</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>victim_addr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>hit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="284" column="8" bodyfile="/github/workspace/inc/cache.h" bodystart="284" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1a57df722e9cd523c71cba7abe42102b00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CACHE::impl_replacement_final_stats</definition>
        <argsstring>()</argsstring>
        <name>impl_replacement_final_stats</name>
        <qualifiedname>CACHE::impl_replacement_final_stats</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="289" column="8" bodyfile="/github/workspace/inc/cache.h" bodystart="289" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="classCACHE_1adcb2983ec25b7bcc8dc7a658893453bf" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned long long</type>
            <declname>P_FLAG</declname>
            <defname>P_FLAG</defname>
          </param>
          <param>
            <type>unsigned long long</type>
            <declname>R_FLAG</declname>
            <defname>R_FLAG</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CACHE::CACHE</definition>
        <argsstring>(Builder&lt; P_FLAG, R_FLAG &gt; b)</argsstring>
        <name>CACHE</name>
        <qualifiedname>CACHE::CACHE</qualifiedname>
        <param>
          <type><ref refid="classCACHE_1_1Builder" kindref="compound">Builder</ref>&lt; P_FLAG, R_FLAG &gt;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/cache.h" line="458" column="12" bodyfile="/github/workspace/inc/cache.h" bodystart="458" bodyend="465"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>CACHE</label>
        <link refid="classCACHE"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>champsim::operable</label>
        <link refid="classchampsim_1_1operable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>CACHE</label>
        <link refid="classCACHE"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>lower_level</edgelabel>
          <edgelabel>lower_translate</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>roi_stats</edgelabel>
          <edgelabel>sim_stats</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>cache_stats</label>
        <link refid="structcache__stats"/>
      </node>
      <node id="4">
        <label>champsim::cache_queue_stats</label>
        <link refid="structchampsim_1_1cache__queue__stats"/>
      </node>
      <node id="3">
        <label>champsim::channel</label>
        <link refid="classchampsim_1_1channel"/>
        <childnode refid="4" relation="usage">
          <edgelabel>roi_stats</edgelabel>
          <edgelabel>sim_stats</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>champsim::operable</label>
        <link refid="classchampsim_1_1operable"/>
      </node>
    </collaborationgraph>
    <location file="/github/workspace/inc/cache.h" line="56" column="1" bodyfile="/github/workspace/inc/cache.h" bodystart="57" bodyend="466"/>
    <listofallmembers>
      <member refid="classchampsim_1_1operable_1a3772b0e41a34c9c8384a44108d6f6165" prot="public" virt="non-virtual"><scope>CACHE</scope><name>_operate</name></member>
      <member refid="classCACHE_1af1498c217bccc9c410f66e75e8a7f322" prot="public" virt="virtual"><scope>CACHE</scope><name>begin_phase</name></member>
      <member refid="classCACHE_1a1a5825ce9bc36f284a96b5ce14528c5d" prot="public" virt="non-virtual"><scope>CACHE</scope><name>block</name></member>
      <member refid="classCACHE_1adcb2983ec25b7bcc8dc7a658893453bf" prot="public" virt="non-virtual"><scope>CACHE</scope><name>CACHE</name></member>
      <member refid="classCACHE_1a78204ba0de94f2dd614c3ebed67accf7" prot="private" virt="non-virtual"><scope>CACHE</scope><name>channel_type</name></member>
      <member refid="classchampsim_1_1operable_1ad92c48b440cad47adad20c0b3008a541" prot="public" virt="non-virtual"><scope>CACHE</scope><name>CLOCK_SCALE</name></member>
      <member refid="classCACHE_1a87b90ab65ad1ac0fb1c25d24e71bfdb3" prot="public" virt="non-virtual"><scope>CACHE</scope><name>cpu</name></member>
      <member refid="classchampsim_1_1operable_1a7c01174851f4ac835de1063844a335b6" prot="public" virt="non-virtual"><scope>CACHE</scope><name>current_cycle</name></member>
      <member refid="classCACHE_1aa4779e21b680716dac8f917bacbd7a51" prot="public" virt="virtual"><scope>CACHE</scope><name>end_phase</name></member>
      <member refid="classCACHE_1a95c49295093926a4faa8b3bc922ec13a" prot="public" virt="non-virtual"><scope>CACHE</scope><name>ever_seen_data</name></member>
      <member refid="classCACHE_1ab9cb60c96e95cc8ee3ca429b6b3ec7baa20e4843cfcf376f4891354a9d6716ad0" prot="private" virt="non-virtual"><scope>CACHE</scope><name>FILL_DRAM</name></member>
      <member refid="classCACHE_1ab9cb60c96e95cc8ee3ca429b6b3ec7baaa6539f3d0b137ec97dd4e3e8586e4c6f" prot="private" virt="non-virtual"><scope>CACHE</scope><name>FILL_DRC</name></member>
      <member refid="classCACHE_1ab9cb60c96e95cc8ee3ca429b6b3ec7baa8d3ba584008a1cf7a6bba5c03848bc00" prot="private" virt="non-virtual"><scope>CACHE</scope><name>FILL_L1</name></member>
      <member refid="classCACHE_1ab9cb60c96e95cc8ee3ca429b6b3ec7baa8b4c1a02046069411563043241013ac6" prot="private" virt="non-virtual"><scope>CACHE</scope><name>FILL_L2</name></member>
      <member refid="classCACHE_1afd1154a8919e441f346146c3e505b759" prot="public" virt="non-virtual"><scope>CACHE</scope><name>FILL_LATENCY</name></member>
      <member refid="classCACHE_1ab9cb60c96e95cc8ee3ca429b6b3ec7ba" prot="private" virt="non-virtual"><scope>CACHE</scope><name>FILL_LEVEL</name></member>
      <member refid="classCACHE_1ab9cb60c96e95cc8ee3ca429b6b3ec7baa64edf6164db441f6a2ebf25870b6fe47" prot="private" virt="non-virtual"><scope>CACHE</scope><name>FILL_LLC</name></member>
      <member refid="classCACHE_1a772625750bfb8211c2aab0c38e608bf3" prot="private" virt="non-virtual"><scope>CACHE</scope><name>finish_packet</name></member>
      <member refid="classCACHE_1a616add283b725d66cec426ea86055b49" prot="private" virt="non-virtual"><scope>CACHE</scope><name>finish_translation</name></member>
      <member refid="classCACHE_1a5effc7c9117ed79a7ee3f8ac21e481b1" prot="public" virt="non-virtual"><scope>CACHE</scope><name>get_mshr_occupancy</name></member>
      <member refid="classCACHE_1af3a2dce54bc7ad24bd894279413a2cc4" prot="public" virt="non-virtual"><scope>CACHE</scope><name>get_mshr_occupancy_ratio</name></member>
      <member refid="classCACHE_1a2802efa6a063d383493a13e4e546341f" prot="public" virt="non-virtual"><scope>CACHE</scope><name>get_mshr_size</name></member>
      <member refid="classCACHE_1ab8ec0ef69574e8e4ab017be3e07511b1" prot="public" virt="non-virtual"><scope>CACHE</scope><name>get_occupancy</name></member>
      <member refid="classCACHE_1ae5ff96522301509be92d0b7a9e59ebd6" prot="public" virt="non-virtual"><scope>CACHE</scope><name>get_pq_occupancy</name></member>
      <member refid="classCACHE_1a1bb8bae8dd2f827aea18cc2e217433e9" prot="public" virt="non-virtual"><scope>CACHE</scope><name>get_pq_occupancy_ratio</name></member>
      <member refid="classCACHE_1ad356b90318675c49c0c441e6f24c510a" prot="public" virt="non-virtual"><scope>CACHE</scope><name>get_pq_size</name></member>
      <member refid="classCACHE_1afa8c11ede4e821451f9ffd473f51be0f" prot="public" virt="non-virtual"><scope>CACHE</scope><name>get_rq_occupancy</name></member>
      <member refid="classCACHE_1ab4e62fa492835cb6b487271eb4dc1698" prot="public" virt="non-virtual"><scope>CACHE</scope><name>get_rq_occupancy_ratio</name></member>
      <member refid="classCACHE_1ad90a557929fb3122202adba9b88e2013" prot="public" virt="non-virtual"><scope>CACHE</scope><name>get_rq_size</name></member>
      <member refid="classCACHE_1a737969e27f8f4c66729a4e04c889bdbc" prot="public" virt="non-virtual"><scope>CACHE</scope><name>get_set</name></member>
      <member refid="classCACHE_1a46e64eaf165a1fcb109d149d4e5421a0" prot="private" virt="non-virtual"><scope>CACHE</scope><name>get_set_index</name></member>
      <member refid="classCACHE_1a76dd4375431989a6e580ee59728e1eb7" prot="private" virt="non-virtual"><scope>CACHE</scope><name>get_set_span</name></member>
      <member refid="classCACHE_1a0973bfa2b0dc1d3e4cf203fe28d2299a" prot="private" virt="non-virtual"><scope>CACHE</scope><name>get_set_span</name></member>
      <member refid="classCACHE_1a4174c447645b1e97325b88dab56a5882" prot="public" virt="non-virtual"><scope>CACHE</scope><name>get_size</name></member>
      <member refid="classCACHE_1a7ef6f696d5d075cfdb5e34501451a7e8" prot="public" virt="non-virtual"><scope>CACHE</scope><name>get_way</name></member>
      <member refid="classCACHE_1a35f31927f50d224a6c5769b99106c060" prot="public" virt="non-virtual"><scope>CACHE</scope><name>get_wq_occupancy</name></member>
      <member refid="classCACHE_1ab4a8c312b7e90a5cd06531a0f72f2afc" prot="public" virt="non-virtual"><scope>CACHE</scope><name>get_wq_occupancy_ratio</name></member>
      <member refid="classCACHE_1a004038352376e652725b7d8ee4c22466" prot="public" virt="non-virtual"><scope>CACHE</scope><name>get_wq_size</name></member>
      <member refid="classCACHE_1a391c1c17b56ca36f420d3008ba2e5b4a" prot="private" virt="non-virtual"><scope>CACHE</scope><name>handle_fill</name></member>
      <member refid="classCACHE_1a5604d996a7478bdb0a1a83cb39b95779" prot="private" virt="non-virtual"><scope>CACHE</scope><name>handle_miss</name></member>
      <member refid="classCACHE_1a2fae52694473b37e9ad5b06b45543472" prot="private" virt="non-virtual"><scope>CACHE</scope><name>handle_write</name></member>
      <member refid="classCACHE_1a0c3dec89dffe55649e0fa0d092681f04" prot="public" virt="non-virtual"><scope>CACHE</scope><name>HIT_LATENCY</name></member>
      <member refid="classCACHE_1af05cdde16e4d5442b4b6d7c33f590e22" prot="public" virt="non-virtual"><scope>CACHE</scope><name>impl_find_victim</name></member>
      <member refid="classCACHE_1a1cbd414b6596affdb8a0c0908418f60c" prot="public" virt="non-virtual"><scope>CACHE</scope><name>impl_initialize_replacement</name></member>
      <member refid="classCACHE_1a11c95fe1e0fba71a12f7b719274df499" prot="public" virt="non-virtual"><scope>CACHE</scope><name>impl_prefetcher_branch_operate</name></member>
      <member refid="classCACHE_1af77461d96caf4f3ff60eda6438434e14" prot="public" virt="non-virtual"><scope>CACHE</scope><name>impl_prefetcher_cache_fill</name></member>
      <member refid="classCACHE_1a3a6ab640478c04c8cdbdd48e91b4b7ef" prot="public" virt="non-virtual"><scope>CACHE</scope><name>impl_prefetcher_cache_operate</name></member>
      <member refid="classCACHE_1aea29b1ce8df1ddbd3d27c8217ee05e7c" prot="public" virt="non-virtual"><scope>CACHE</scope><name>impl_prefetcher_cycle_operate</name></member>
      <member refid="classCACHE_1a9b7b4f963b9dd750e09359e735bf9f54" prot="public" virt="non-virtual"><scope>CACHE</scope><name>impl_prefetcher_final_stats</name></member>
      <member refid="classCACHE_1ae6de901f283e78cb39f09c67af106786" prot="public" virt="non-virtual"><scope>CACHE</scope><name>impl_prefetcher_initialize</name></member>
      <member refid="classCACHE_1a57df722e9cd523c71cba7abe42102b00" prot="public" virt="non-virtual"><scope>CACHE</scope><name>impl_replacement_final_stats</name></member>
      <member refid="classCACHE_1abca46ad24c1b404f7e8a8715039c8644" prot="public" virt="non-virtual"><scope>CACHE</scope><name>impl_update_replacement_state</name></member>
      <member refid="classCACHE_1aebe3a0623dbafd3228fd1dc4c697bf3b" prot="private" virt="non-virtual"><scope>CACHE</scope><name>inflight_tag_check</name></member>
      <member refid="classCACHE_1a33b719d0a8b4c1d27e8568b401b9f005" prot="public" virt="non-virtual"><scope>CACHE</scope><name>inflight_writes</name></member>
      <member refid="classCACHE_1a848cb30ace81c02c7c207072e327d3fe" prot="public" virt="virtual"><scope>CACHE</scope><name>initialize</name></member>
      <member refid="classCACHE_1aae5a7e934e9bcdd1fa6cb25ca1bf5e35" prot="private" virt="non-virtual"><scope>CACHE</scope><name>initiate_tag_check</name></member>
      <member refid="classCACHE_1a42c5d902ce8aa2674b03b7b334342521" prot="private" virt="non-virtual"><scope>CACHE</scope><name>internal_PQ</name></member>
      <member refid="classCACHE_1a6e22bb8c4f84ee73e974cb5173bcc536" prot="public" virt="non-virtual"><scope>CACHE</scope><name>invalidate_entry</name></member>
      <member refid="classCACHE_1a97810aaac2b817e65999dd0ccfc67fba" prot="private" virt="non-virtual"><scope>CACHE</scope><name>issue_translation</name></member>
      <member refid="classchampsim_1_1operable_1a01987ce82bc1614f66f559e4857f78ba" prot="public" virt="non-virtual"><scope>CACHE</scope><name>leap_operation</name></member>
      <member refid="classCACHE_1a8478a2e23a8945e0c7d90d1a73503529" prot="public" virt="non-virtual"><scope>CACHE</scope><name>lower_level</name></member>
      <member refid="classCACHE_1a406c27218eb3db3b14e1044aee53424e" prot="public" virt="non-virtual"><scope>CACHE</scope><name>lower_translate</name></member>
      <member refid="classCACHE_1a099df667e7b83c3503aa7b39b6628344" prot="public" virt="non-virtual"><scope>CACHE</scope><name>match_offset_bits</name></member>
      <member refid="classCACHE_1a81cf8431c2669b2ade7b3867b8b2478d" prot="public" virt="non-virtual"><scope>CACHE</scope><name>MAX_FILL</name></member>
      <member refid="classCACHE_1a98de6ac4747dd00fe5381a7843c46fbe" prot="public" virt="non-virtual"><scope>CACHE</scope><name>MAX_TAG</name></member>
      <member refid="classCACHE_1aa63ecffc0a172a396cb07b25f709338e" prot="public" virt="non-virtual"><scope>CACHE</scope><name>module_pimpl</name></member>
      <member refid="classCACHE_1a3149ef2fa092ebba6ac4191a1d57a535" prot="public" virt="non-virtual"><scope>CACHE</scope><name>MSHR</name></member>
      <member refid="classCACHE_1a1fe14de255f47173f84d1f82b0078bd9" prot="public" virt="non-virtual"><scope>CACHE</scope><name>MSHR_SIZE</name></member>
      <member refid="classCACHE_1a677946ec359a5d63efb5fca5d8f796cd" prot="public" virt="non-virtual"><scope>CACHE</scope><name>NAME</name></member>
      <member refid="classCACHE_1a27f929e7499b4380bb1eb137789ecc15" prot="public" virt="non-virtual"><scope>CACHE</scope><name>NUM_SET</name></member>
      <member refid="classCACHE_1ab1d55261a8d0cf765fd90115c9a59679" prot="public" virt="non-virtual"><scope>CACHE</scope><name>NUM_WAY</name></member>
      <member refid="classCACHE_1af07c41cf7715f7604e9aafe07df2e5c8" prot="public" virt="non-virtual"><scope>CACHE</scope><name>OFFSET_BITS</name></member>
      <member refid="classchampsim_1_1operable_1aae28abe79c0122d7eda58039f2235786" prot="public" virt="non-virtual"><scope>CACHE</scope><name>operable</name></member>
      <member refid="classCACHE_1a6821fd53c327dcdfd82af0dfabf9196a" prot="public" virt="virtual"><scope>CACHE</scope><name>operate</name></member>
      <member refid="classCACHE_1a14f18b98393b87114d07d839fcaf3e04" prot="public" virt="non-virtual"><scope>CACHE</scope><name>PQ_SIZE</name></member>
      <member refid="classCACHE_1a1de38964a4af2d0af3f1dfe029da93c7" prot="public" virt="non-virtual"><scope>CACHE</scope><name>pref_activate_mask</name></member>
      <member refid="classCACHE_1ae730fa75d6aa15bfa41b2e48e1b9fd69" prot="public" virt="non-virtual"><scope>CACHE</scope><name>prefetch_as_load</name></member>
      <member refid="classCACHE_1aa64044841983110bb83e1823c77e4ca5" prot="public" virt="non-virtual"><scope>CACHE</scope><name>prefetch_line</name></member>
      <member refid="classCACHE_1a21e31b7bc30707c7020397e3b710493e" prot="public" virt="non-virtual"><scope>CACHE</scope><name>prefetch_line</name></member>
      <member refid="classCACHE_1aaab1fd23d8a1c4dafab1d69c6c9f46b2" prot="public" virt="virtual"><scope>CACHE</scope><name>print_deadlock</name></member>
      <member refid="classCACHE_1a4a2db5c70228c41439df5bfd426ab22b" prot="private" virt="non-virtual"><scope>CACHE</scope><name>request_type</name></member>
      <member refid="classCACHE_1a455086b84711f60dc9ebff7468ac043b" prot="private" virt="non-virtual"><scope>CACHE</scope><name>response_type</name></member>
      <member refid="classCACHE_1aa0c04817e806ad2fe3928c83ffd29bc9" prot="public" virt="non-virtual"><scope>CACHE</scope><name>roi_stats</name></member>
      <member refid="classCACHE_1aad85947f3ad88b0b4e3f5d9382a61ad4" prot="private" virt="non-virtual"><scope>CACHE</scope><name>set_type</name></member>
      <member refid="classCACHE_1ad892fc4f00fd2b642da356b696403eb9" prot="private" virt="non-virtual"><scope>CACHE</scope><name>should_activate_prefetcher</name></member>
      <member refid="classCACHE_1ae7c7923567056ce90cd550b0d9f49291" prot="public" virt="non-virtual"><scope>CACHE</scope><name>sim_stats</name></member>
      <member refid="classCACHE_1af3b7a69f823e3c979a3e1c1f2b56a73f" prot="public" virt="non-virtual"><scope>CACHE</scope><name>stats_type</name></member>
      <member refid="classCACHE_1a1d755dff58db1dbf62c3f96b7e772128" prot="private" virt="non-virtual"><scope>CACHE</scope><name>translation_stash</name></member>
      <member refid="classCACHE_1a82604fbde640dd4dd79656806a255692" prot="private" virt="non-virtual"><scope>CACHE</scope><name>try_hit</name></member>
      <member refid="classCACHE_1af481d8b5e2c96fb1edc999f0d11a5588" prot="public" virt="non-virtual"><scope>CACHE</scope><name>upper_levels</name></member>
      <member refid="classCACHE_1ad23c22d2243f6f1f599a244a2661f69b" prot="public" virt="non-virtual"><scope>CACHE</scope><name>virtual_prefetch</name></member>
      <member refid="classchampsim_1_1operable_1a3464324490f33c24df3a11f4e30aa78b" prot="public" virt="non-virtual"><scope>CACHE</scope><name>warmup</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
