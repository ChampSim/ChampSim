<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classVirtualMemory" kind="class" language="C++" prot="public">
    <compoundname>VirtualMemory</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classVirtualMemory_1a363393c3cdc3977f4263da3988b874c6" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::pair&lt; uint32_t, uint64_t &gt;, uint64_t &gt;</type>
        <definition>std::map&lt;std::pair&lt;uint32_t, uint64_t&gt;, uint64_t&gt; VirtualMemory::vpage_to_ppage_map</definition>
        <argsstring></argsstring>
        <name>vpage_to_ppage_map</name>
        <qualifiedname>VirtualMemory::vpage_to_ppage_map</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/vmem.h" line="35" column="12" bodyfile="/github/workspace/inc/vmem.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classVirtualMemory_1a3e8226f6e42191ce26a525dd9ad95dd0" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::tuple&lt; uint32_t, uint64_t, uint32_t &gt;, uint64_t &gt;</type>
        <definition>std::map&lt;std::tuple&lt;uint32_t, uint64_t, uint32_t&gt;, uint64_t&gt; VirtualMemory::page_table</definition>
        <argsstring></argsstring>
        <name>page_table</name>
        <qualifiedname>VirtualMemory::page_table</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/vmem.h" line="36" column="12" bodyfile="/github/workspace/inc/vmem.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classVirtualMemory_1a477d3a3b270a843a06b8a01dc275e8a6" prot="private" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t VirtualMemory::next_pte_page</definition>
        <argsstring></argsstring>
        <name>next_pte_page</name>
        <qualifiedname>VirtualMemory::next_pte_page</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/vmem.h" line="38" column="12" bodyfile="/github/workspace/inc/vmem.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classVirtualMemory_1a14116ea1cd417351cb285fd3561f344b" prot="private" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t VirtualMemory::next_ppage</definition>
        <argsstring></argsstring>
        <name>next_ppage</name>
        <qualifiedname>VirtualMemory::next_ppage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/vmem.h" line="40" column="12" bodyfile="/github/workspace/inc/vmem.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classVirtualMemory_1a93fb0f154131887c01019178f9b2f4ca" prot="private" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t VirtualMemory::last_ppage</definition>
        <argsstring></argsstring>
        <name>last_ppage</name>
        <qualifiedname>VirtualMemory::last_ppage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/vmem.h" line="41" column="12" bodyfile="/github/workspace/inc/vmem.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classVirtualMemory_1af27b8103c6bfb1d9947d663fc45368c8" prot="public" static="no" mutable="no">
        <type>const uint64_t</type>
        <definition>const uint64_t VirtualMemory::minor_fault_penalty</definition>
        <argsstring></argsstring>
        <name>minor_fault_penalty</name>
        <qualifiedname>VirtualMemory::minor_fault_penalty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/vmem.h" line="47" column="18" bodyfile="/github/workspace/inc/vmem.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classVirtualMemory_1ae57f233be85bef7b8400ae9f677f52aa" prot="public" static="no" mutable="no">
        <type>const std::size_t</type>
        <definition>const std::size_t VirtualMemory::pt_levels</definition>
        <argsstring></argsstring>
        <name>pt_levels</name>
        <qualifiedname>VirtualMemory::pt_levels</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/vmem.h" line="48" column="21" bodyfile="/github/workspace/inc/vmem.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classVirtualMemory_1a6764f9265b541da2c77268aecc277a53" prot="public" static="no" mutable="no">
        <type>const uint64_t</type>
        <definition>const uint64_t VirtualMemory::pte_page_size</definition>
        <argsstring></argsstring>
        <name>pte_page_size</name>
        <qualifiedname>VirtualMemory::pte_page_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/vmem.h" line="49" column="18" bodyfile="/github/workspace/inc/vmem.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classVirtualMemory_1ac2d88c742d9b5f2f404ac6c5e073e86f" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t VirtualMemory::ppage_front</definition>
        <argsstring>() const</argsstring>
        <name>ppage_front</name>
        <qualifiedname>VirtualMemory::ppage_front</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/vmem.h" line="43" column="12" bodyfile="/github/workspace/src/vmem.cc" bodystart="48" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classVirtualMemory_1ad9935d5acd6f8e1bc87bb24ce514c197" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualMemory::ppage_pop</definition>
        <argsstring>()</argsstring>
        <name>ppage_pop</name>
        <qualifiedname>VirtualMemory::ppage_pop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/vmem.h" line="44" column="8" bodyfile="/github/workspace/src/vmem.cc" bodystart="54" bodyend="54"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classVirtualMemory_1ac6700a11ee325c6e68994577293f81d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>VirtualMemory::VirtualMemory</definition>
        <argsstring>(uint64_t pg_size, std::size_t page_table_levels, uint64_t minor_penalty, MEMORY_CONTROLLER &amp;dram)</argsstring>
        <name>VirtualMemory</name>
        <qualifiedname>VirtualMemory::VirtualMemory</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>pg_size</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>page_table_levels</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>minor_penalty</declname>
        </param>
        <param>
          <type><ref refid="classMEMORY__CONTROLLER" kindref="compound">MEMORY_CONTROLLER</ref> &amp;</type>
          <declname>dram</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/vmem.h" line="52" column="3" bodyfile="/github/workspace/src/vmem.cc" bodystart="26" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classVirtualMemory_1adbad07cd7a6956de0f7a23ef6067ceea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t VirtualMemory::shamt</definition>
        <argsstring>(std::size_t level) const</argsstring>
        <name>shamt</name>
        <qualifiedname>VirtualMemory::shamt</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/vmem.h" line="53" column="12" bodyfile="/github/workspace/src/vmem.cc" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classVirtualMemory_1a030ea329d9aa108d34de7bd1226c5f28" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t VirtualMemory::get_offset</definition>
        <argsstring>(uint64_t vaddr, std::size_t level) const</argsstring>
        <name>get_offset</name>
        <qualifiedname>VirtualMemory::get_offset</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>vaddr</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/vmem.h" line="54" column="12" bodyfile="/github/workspace/src/vmem.cc" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classVirtualMemory_1ae1f3135be5b3d35c359dacb883aacea6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t VirtualMemory::available_ppages</definition>
        <argsstring>() const</argsstring>
        <name>available_ppages</name>
        <qualifiedname>VirtualMemory::available_ppages</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/vmem.h" line="55" column="15" bodyfile="/github/workspace/src/vmem.cc" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classVirtualMemory_1ae4dcb3f21c53d280a97b951adff82d9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; uint64_t, uint64_t &gt;</type>
        <definition>std::pair&lt; uint64_t, uint64_t &gt; VirtualMemory::va_to_pa</definition>
        <argsstring>(uint32_t cpu_num, uint64_t vaddr)</argsstring>
        <name>va_to_pa</name>
        <qualifiedname>VirtualMemory::va_to_pa</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>cpu_num</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>vaddr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/vmem.h" line="56" column="13" bodyfile="/github/workspace/src/vmem.cc" bodystart="58" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classVirtualMemory_1a6abd19f645173eb4ea0b50936d6a39f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; uint64_t, uint64_t &gt;</type>
        <definition>std::pair&lt; uint64_t, uint64_t &gt; VirtualMemory::get_pte_pa</definition>
        <argsstring>(uint32_t cpu_num, uint64_t vaddr, std::size_t level)</argsstring>
        <name>get_pte_pa</name>
        <qualifiedname>VirtualMemory::get_pte_pa</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>cpu_num</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>vaddr</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/vmem.h" line="57" column="13" bodyfile="/github/workspace/src/vmem.cc" bodystart="74" bodyend="100"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/github/workspace/inc/vmem.h" line="32" column="1" bodyfile="/github/workspace/inc/vmem.h" bodystart="33" bodyend="58"/>
    <listofallmembers>
      <member refid="classVirtualMemory_1ae1f3135be5b3d35c359dacb883aacea6" prot="public" virt="non-virtual"><scope>VirtualMemory</scope><name>available_ppages</name></member>
      <member refid="classVirtualMemory_1a030ea329d9aa108d34de7bd1226c5f28" prot="public" virt="non-virtual"><scope>VirtualMemory</scope><name>get_offset</name></member>
      <member refid="classVirtualMemory_1a6abd19f645173eb4ea0b50936d6a39f9" prot="public" virt="non-virtual"><scope>VirtualMemory</scope><name>get_pte_pa</name></member>
      <member refid="classVirtualMemory_1a93fb0f154131887c01019178f9b2f4ca" prot="private" virt="non-virtual"><scope>VirtualMemory</scope><name>last_ppage</name></member>
      <member refid="classVirtualMemory_1af27b8103c6bfb1d9947d663fc45368c8" prot="public" virt="non-virtual"><scope>VirtualMemory</scope><name>minor_fault_penalty</name></member>
      <member refid="classVirtualMemory_1a14116ea1cd417351cb285fd3561f344b" prot="private" virt="non-virtual"><scope>VirtualMemory</scope><name>next_ppage</name></member>
      <member refid="classVirtualMemory_1a477d3a3b270a843a06b8a01dc275e8a6" prot="private" virt="non-virtual"><scope>VirtualMemory</scope><name>next_pte_page</name></member>
      <member refid="classVirtualMemory_1a3e8226f6e42191ce26a525dd9ad95dd0" prot="private" virt="non-virtual"><scope>VirtualMemory</scope><name>page_table</name></member>
      <member refid="classVirtualMemory_1ac2d88c742d9b5f2f404ac6c5e073e86f" prot="private" virt="non-virtual"><scope>VirtualMemory</scope><name>ppage_front</name></member>
      <member refid="classVirtualMemory_1ad9935d5acd6f8e1bc87bb24ce514c197" prot="private" virt="non-virtual"><scope>VirtualMemory</scope><name>ppage_pop</name></member>
      <member refid="classVirtualMemory_1ae57f233be85bef7b8400ae9f677f52aa" prot="public" virt="non-virtual"><scope>VirtualMemory</scope><name>pt_levels</name></member>
      <member refid="classVirtualMemory_1a6764f9265b541da2c77268aecc277a53" prot="public" virt="non-virtual"><scope>VirtualMemory</scope><name>pte_page_size</name></member>
      <member refid="classVirtualMemory_1adbad07cd7a6956de0f7a23ef6067ceea" prot="public" virt="non-virtual"><scope>VirtualMemory</scope><name>shamt</name></member>
      <member refid="classVirtualMemory_1ae4dcb3f21c53d280a97b951adff82d9d" prot="public" virt="non-virtual"><scope>VirtualMemory</scope><name>va_to_pa</name></member>
      <member refid="classVirtualMemory_1ac6700a11ee325c6e68994577293f81d3" prot="public" virt="non-virtual"><scope>VirtualMemory</scope><name>VirtualMemory</name></member>
      <member refid="classVirtualMemory_1a363393c3cdc3977f4263da3988b874c6" prot="private" virt="non-virtual"><scope>VirtualMemory</scope><name>vpage_to_ppage_map</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
