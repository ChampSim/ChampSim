<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="channel_8h" kind="file" language="C++">
    <compoundname>channel.h</compoundname>
    <includes local="no">array</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">deque</includes>
    <includes local="no">functional</includes>
    <includes local="no">limits</includes>
    <includes local="no">vector</includes>
    <includes local="no">string_view</includes>
    <includedby refid="cache_8h" local="yes">cache.h</includedby>
    <includedby refid="channel_8cc" local="yes">channel.cc</includedby>
    <includedby refid="dram__controller_8h" local="yes">dram_controller.h</includedby>
    <includedby refid="ooo__cpu_8h" local="yes">ooo_cpu.h</includedby>
    <includedby refid="ptw_8h" local="yes">ptw.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>channel.h</label>
        <link refid="channel_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>array</label>
      </node>
      <node id="3">
        <label>cstdint</label>
      </node>
      <node id="4">
        <label>deque</label>
      </node>
      <node id="5">
        <label>functional</label>
      </node>
      <node id="6">
        <label>limits</label>
      </node>
      <node id="8">
        <label>string_view</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>cache.h</label>
        <link refid="cache_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>channel.h</label>
        <link refid="channel_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>defaults.hpp</label>
        <link refid="defaults_8hpp_source"/>
      </node>
      <node id="7">
        <label>dram_controller.h</label>
        <link refid="dram__controller_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>environment.h</label>
        <link refid="environment_8h_source"/>
      </node>
      <node id="8">
        <label>ooo_cpu.h</label>
        <link refid="ooo__cpu_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>phase_info.h</label>
        <link refid="phase__info_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ptw.h</label>
        <link refid="ptw_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stats_printer.h</label>
        <link refid="stats__printer_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structchampsim_1_1cache__queue__stats" prot="public">champsim::cache_queue_stats</innerclass>
    <innerclass refid="classchampsim_1_1channel" prot="public">champsim::channel</innerclass>
    <innerclass refid="structchampsim_1_1channel_1_1request" prot="private">champsim::channel::request</innerclass>
    <innerclass refid="structchampsim_1_1channel_1_1response" prot="private">champsim::channel::response</innerclass>
    <innernamespace refid="namespacechampsim">champsim</innernamespace>
    <innernamespace refid="namespacestd_1_1literals_1_1string__view__literals">std::literals::string_view_literals</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="channel_8h_1aadd7421c33e41ad3c46bcca485643d9e" prot="public" static="no" strong="yes">
        <type>unsigned</type>
        <name>access_type</name>
        <enumvalue id="channel_8h_1aadd7421c33e41ad3c46bcca485643d9ea615d2885ef7576cedd9aafbb2578f028" prot="public">
          <name>LOAD</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="channel_8h_1aadd7421c33e41ad3c46bcca485643d9ea0d0c205c91827293d85c61734552bb70" prot="public">
          <name>RFO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="channel_8h_1aadd7421c33e41ad3c46bcca485643d9eaa78a8d492349aa1aeef53ce4c89033c8" prot="public">
          <name>PREFETCH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="channel_8h_1aadd7421c33e41ad3c46bcca485643d9ead4b9e47f65b6e79b010582f15785867e" prot="public">
          <name>WRITE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="channel_8h_1aadd7421c33e41ad3c46bcca485643d9ea0da044e5b37e6bcb3a8d01dc7362b276" prot="public">
          <name>TRANSLATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="channel_8h_1aadd7421c33e41ad3c46bcca485643d9ea34b297af0d2f4a6024a59d0d3a318026" prot="public">
          <name>NUM_TYPES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/channel.h" line="31" column="1" bodyfile="/github/workspace/inc/channel.h" bodystart="31" bodyend="38"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="channel_8h_1a1189705d58363c03f2db8be383693ca9" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr std::array&lt; std::string_view, static_cast&lt; std::size_t &gt;(access_type::NUM_TYPES)&gt;</type>
        <definition>constexpr std::array&lt;std::string_view, static_cast&lt;std::size_t&gt;(access_type::NUM_TYPES)&gt; access_type_names</definition>
        <argsstring></argsstring>
        <name>access_type_names</name>
        <initializer>{&quot;LOAD&quot;sv, &quot;RFO&quot;sv, &quot;PREFETCH&quot;sv, &quot;WRITE&quot;sv,
                                                                                                                  &quot;TRANSLATION&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/channel.h" line="41" column="31" bodyfile="/github/workspace/inc/channel.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>Copyright<sp/>2023<sp/>The<sp/>ChampSim<sp/>Contributors</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CHANNEL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHANNEL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;deque&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string_view&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structooo__model__instr" kindref="compound">ooo_model_instr</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>access_type<sp/>:<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>LOAD<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>RFO,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>PREFETCH,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>WRITE,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>TRANSLATION,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>NUM_TYPES,</highlight></codeline>
<codeline lineno="38"><highlight class="normal">};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::literals::string_view_literals;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>std::array&lt;std::string_view,<sp/>static_cast&lt;std::size_t&gt;(access_type::NUM_TYPES)&gt;<sp/>access_type_names{</highlight><highlight class="stringliteral">&quot;LOAD&quot;</highlight><highlight class="normal">sv,<sp/></highlight><highlight class="stringliteral">&quot;RFO&quot;</highlight><highlight class="normal">sv,<sp/></highlight><highlight class="stringliteral">&quot;PREFETCH&quot;</highlight><highlight class="normal">sv,<sp/></highlight><highlight class="stringliteral">&quot;WRITE&quot;</highlight><highlight class="normal">sv,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;TRANSLATION&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">champsim</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="structchampsim_1_1cache__queue__stats" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structchampsim_1_1cache__queue__stats" kindref="compound">cache_queue_stats</ref><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>uint64_t<sp/>RQ_ACCESS<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>uint64_t<sp/>RQ_MERGED<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>uint64_t<sp/>RQ_FULL<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>uint64_t<sp/>RQ_TO_CACHE<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>uint64_t<sp/>PQ_ACCESS<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>uint64_t<sp/>PQ_MERGED<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>uint64_t<sp/>PQ_FULL<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>uint64_t<sp/>PQ_TO_CACHE<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>uint64_t<sp/>WQ_ACCESS<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>uint64_t<sp/>WQ_MERGED<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>uint64_t<sp/>WQ_FULL<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>uint64_t<sp/>WQ_TO_CACHE<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>uint64_t<sp/>WQ_FORWARD<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="classchampsim_1_1channel" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classchampsim_1_1channel" kindref="compound">channel</ref></highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">request<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>forward_checked<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_translated<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>response_requested<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>asid[2]<sp/>=<sp/>{std::numeric_limits&lt;uint8_t&gt;::max(),<sp/>std::numeric_limits&lt;uint8_t&gt;::max()};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>access_type<sp/>type{access_type::LOAD};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>pf_metadata<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cpu<sp/>=<sp/>std::numeric_limits&lt;uint32_t&gt;::max();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>address<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>v_address<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>data<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>instr_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>ip<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::reference_wrapper&lt;ooo_model_instr&gt;&gt;<sp/>instr_depend_on_me{};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">response<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>address;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>v_address;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>data;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>pf_metadata<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::reference_wrapper&lt;ooo_model_instr&gt;&gt;<sp/>instr_depend_on_me{};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>response(uint64_t<sp/>addr,<sp/>uint64_t<sp/>v_addr,<sp/>uint64_t<sp/>data_,<sp/>uint32_t<sp/>pf_meta,<sp/>std::vector&lt;std::reference_wrapper&lt;ooo_model_instr&gt;&gt;<sp/>deps)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>address(addr),<sp/>v_address(v_addr),<sp/>data(data_),<sp/>pf_metadata(pf_meta),<sp/>instr_depend_on_me(deps)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>response(request<sp/>req)<sp/>:<sp/>response(req.address,<sp/>req.v_address,<sp/>req.data,<sp/>req.pf_metadata,<sp/>req.instr_depend_on_me)<sp/>{}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_add_queue(R&amp;<sp/>queue,<sp/>std::size_t<sp/>queue_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R::value_type&amp;<sp/>packet);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>std::size_t<sp/>RQ_SIZE<sp/>=<sp/>std::numeric_limits&lt;std::size_t&gt;::max();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>std::size_t<sp/>PQ_SIZE<sp/>=<sp/>std::numeric_limits&lt;std::size_t&gt;::max();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>std::size_t<sp/>WQ_SIZE<sp/>=<sp/>std::numeric_limits&lt;std::size_t&gt;::max();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>OFFSET_BITS<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>match_offset_bits<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">response_type<sp/>=<sp/>response;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">request_type<sp/>=<sp/>request;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structchampsim_1_1cache__queue__stats" kindref="compound">stats_type</ref><sp/>=<sp/><ref refid="structchampsim_1_1cache__queue__stats" kindref="compound">cache_queue_stats</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>std::deque&lt;request_type&gt;<sp/>RQ{},<sp/>PQ{},<sp/>WQ{};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>std::deque&lt;response_type&gt;<sp/>returned{};</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="structchampsim_1_1cache__queue__stats" kindref="compound">stats_type</ref><sp/>sim_stats{},<sp/>roi_stats{};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="classchampsim_1_1channel" kindref="compound">channel</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><ref refid="classchampsim_1_1channel" kindref="compound">channel</ref>(std::size_t<sp/>rq_size,<sp/>std::size_t<sp/>pq_size,<sp/>std::size_t<sp/>wq_size,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>offset_bits,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>match_offset);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>add_rq(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>request_type&amp;<sp/>packet);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>add_wq(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>request_type&amp;<sp/>packet);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>add_pq(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>request_type&amp;<sp/>packet);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>std::size_t<sp/>rq_occupancy()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>std::size_t<sp/>wq_occupancy()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>std::size_t<sp/>pq_occupancy()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>std::size_t<sp/>rq_size()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>std::size_t<sp/>wq_size()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>std::size_t<sp/>pq_size()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>check_collision();</highlight></codeline>
<codeline lineno="134"><highlight class="normal">};</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>champsim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/github/workspace/inc/channel.h"/>
  </compounddef>
</doxygen>
