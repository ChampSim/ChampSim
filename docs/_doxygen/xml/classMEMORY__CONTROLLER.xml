<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classMEMORY__CONTROLLER" kind="class" language="C++" prot="public">
    <compoundname>MEMORY_CONTROLLER</compoundname>
    <basecompoundref refid="classchampsim_1_1operable" prot="public" virt="non-virtual">champsim::operable</basecompoundref>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classMEMORY__CONTROLLER_1a4dd399298a7b4b62be46bd015b26e5ec" prot="private" static="no">
        <type><ref refid="classchampsim_1_1channel" kindref="compound">champsim::channel</ref></type>
        <definition>using MEMORY_CONTROLLER::channel_type =  champsim::channel</definition>
        <argsstring></argsstring>
        <name>channel_type</name>
        <qualifiedname>MEMORY_CONTROLLER::channel_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/dram_controller.h" line="87" column="3" bodyfile="/github/workspace/inc/dram_controller.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMEMORY__CONTROLLER_1ad21382907b26d333a7f54dddc698ea48" prot="private" static="no">
        <type>typename channel_type::request_type</type>
        <definition>using MEMORY_CONTROLLER::request_type =  typename channel_type::request_type</definition>
        <argsstring></argsstring>
        <name>request_type</name>
        <qualifiedname>MEMORY_CONTROLLER::request_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/dram_controller.h" line="88" column="3" bodyfile="/github/workspace/inc/dram_controller.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMEMORY__CONTROLLER_1a1f19adccb41645f6affdb5b47721967b" prot="private" static="no">
        <type>typename channel_type::response_type</type>
        <definition>using MEMORY_CONTROLLER::response_type =  typename channel_type::response_type</definition>
        <argsstring></argsstring>
        <name>response_type</name>
        <qualifiedname>MEMORY_CONTROLLER::response_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/dram_controller.h" line="89" column="3" bodyfile="/github/workspace/inc/dram_controller.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classMEMORY__CONTROLLER_1a02675f400d4702dd5bbaf30803dce6ae" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classchampsim_1_1channel" kindref="compound">channel_type</ref> * &gt;</type>
        <definition>std::vector&lt;channel_type*&gt; MEMORY_CONTROLLER::queues</definition>
        <argsstring></argsstring>
        <name>queues</name>
        <qualifiedname>MEMORY_CONTROLLER::queues</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/dram_controller.h" line="90" column="15" bodyfile="/github/workspace/inc/dram_controller.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMEMORY__CONTROLLER_1a92bd3a5885fa8191b92a1be365ada22e" prot="private" static="no" mutable="no">
        <type>const uint64_t</type>
        <definition>const uint64_t MEMORY_CONTROLLER::tRP</definition>
        <argsstring></argsstring>
        <name>tRP</name>
        <qualifiedname>MEMORY_CONTROLLER::tRP</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/dram_controller.h" line="93" column="18" bodyfile="/github/workspace/inc/dram_controller.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMEMORY__CONTROLLER_1afd82250fbdf76a7b6f9b2e82e0558656" prot="private" static="no" mutable="no">
        <type>const uint64_t</type>
        <definition>const uint64_t MEMORY_CONTROLLER::tRCD</definition>
        <argsstring></argsstring>
        <name>tRCD</name>
        <qualifiedname>MEMORY_CONTROLLER::tRCD</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/dram_controller.h" line="93" column="22" bodyfile="/github/workspace/inc/dram_controller.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMEMORY__CONTROLLER_1a927f1491e33c8b0cf70d280997e7d831" prot="private" static="no" mutable="no">
        <type>const uint64_t</type>
        <definition>const uint64_t MEMORY_CONTROLLER::tCAS</definition>
        <argsstring></argsstring>
        <name>tCAS</name>
        <qualifiedname>MEMORY_CONTROLLER::tCAS</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/dram_controller.h" line="93" column="27" bodyfile="/github/workspace/inc/dram_controller.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMEMORY__CONTROLLER_1a57e0b51a1d365516470033fed1e4dc09" prot="private" static="no" mutable="no">
        <type>const uint64_t</type>
        <definition>const uint64_t MEMORY_CONTROLLER::DRAM_DBUS_TURN_AROUND_TIME</definition>
        <argsstring></argsstring>
        <name>DRAM_DBUS_TURN_AROUND_TIME</name>
        <qualifiedname>MEMORY_CONTROLLER::DRAM_DBUS_TURN_AROUND_TIME</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/dram_controller.h" line="93" column="32" bodyfile="/github/workspace/inc/dram_controller.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMEMORY__CONTROLLER_1ae2df6e9deff60570ed9e797ca216324b" prot="private" static="no" mutable="no">
        <type>const uint64_t</type>
        <definition>const uint64_t MEMORY_CONTROLLER::DRAM_DBUS_RETURN_TIME</definition>
        <argsstring></argsstring>
        <name>DRAM_DBUS_RETURN_TIME</name>
        <qualifiedname>MEMORY_CONTROLLER::DRAM_DBUS_RETURN_TIME</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/dram_controller.h" line="93" column="59" bodyfile="/github/workspace/inc/dram_controller.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classMEMORY__CONTROLLER_1ab703a587e6506adf5f837478607be941" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::size_t</type>
        <definition>constexpr std::size_t MEMORY_CONTROLLER::DRAM_WRITE_HIGH_WM</definition>
        <argsstring></argsstring>
        <name>DRAM_WRITE_HIGH_WM</name>
        <qualifiedname>MEMORY_CONTROLLER::DRAM_WRITE_HIGH_WM</qualifiedname>
        <initializer>= ((DRAM_WQ_SIZE * 7) &gt;&gt; 3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/dram_controller.h" line="96" column="32" bodyfile="/github/workspace/inc/dram_controller.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMEMORY__CONTROLLER_1accd8c2cf10767dd48297f8c715aa5db0" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::size_t</type>
        <definition>constexpr std::size_t MEMORY_CONTROLLER::DRAM_WRITE_LOW_WM</definition>
        <argsstring></argsstring>
        <name>DRAM_WRITE_LOW_WM</name>
        <qualifiedname>MEMORY_CONTROLLER::DRAM_WRITE_LOW_WM</qualifiedname>
        <initializer>= ((DRAM_WQ_SIZE * 6) &gt;&gt; 3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/dram_controller.h" line="97" column="32" bodyfile="/github/workspace/inc/dram_controller.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMEMORY__CONTROLLER_1a60766e7e4bca4ca76a4680cebccf5cb3" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::size_t</type>
        <definition>constexpr std::size_t MEMORY_CONTROLLER::MIN_DRAM_WRITES_PER_SWITCH</definition>
        <argsstring></argsstring>
        <name>MIN_DRAM_WRITES_PER_SWITCH</name>
        <qualifiedname>MEMORY_CONTROLLER::MIN_DRAM_WRITES_PER_SWITCH</qualifiedname>
        <initializer>= ((DRAM_WQ_SIZE * 1) &gt;&gt; 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/dram_controller.h" line="98" column="32" bodyfile="/github/workspace/inc/dram_controller.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classMEMORY__CONTROLLER_1a5e3c2229a8b5a258b58f455601a7602e" prot="public" static="no" mutable="no">
        <type>std::array&lt; <ref refid="structDRAM__CHANNEL" kindref="compound">DRAM_CHANNEL</ref>, DRAM_CHANNELS &gt;</type>
        <definition>std::array&lt;DRAM_CHANNEL, DRAM_CHANNELS&gt; MEMORY_CONTROLLER::channels</definition>
        <argsstring></argsstring>
        <name>channels</name>
        <qualifiedname>MEMORY_CONTROLLER::channels</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/dram_controller.h" line="105" column="14" bodyfile="/github/workspace/inc/dram_controller.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classMEMORY__CONTROLLER_1ae4c44be4349f946d9f935de14ff89cc4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MEMORY_CONTROLLER::initiate_requests</definition>
        <argsstring>()</argsstring>
        <name>initiate_requests</name>
        <qualifiedname>MEMORY_CONTROLLER::initiate_requests</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/dram_controller.h" line="100" column="8" bodyfile="/github/workspace/src/dram_controller.cc" bodystart="277" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classMEMORY__CONTROLLER_1ad2822094d0a0f475a4a9ce17e729472e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MEMORY_CONTROLLER::add_rq</definition>
        <argsstring>(const request_type &amp;pkt, champsim::channel *ul)</argsstring>
        <name>add_rq</name>
        <qualifiedname>MEMORY_CONTROLLER::add_rq</qualifiedname>
        <param>
          <type>const request_type &amp;</type>
          <declname>pkt</declname>
        </param>
        <param>
          <type><ref refid="classchampsim_1_1channel" kindref="compound">champsim::channel</ref> *</type>
          <declname>ul</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/dram_controller.h" line="101" column="8" bodyfile="/github/workspace/src/dram_controller.cc" bodystart="299" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="classMEMORY__CONTROLLER_1a23199b7e0a153b5b5a98656b71ded8d1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MEMORY_CONTROLLER::add_wq</definition>
        <argsstring>(const request_type &amp;pkt)</argsstring>
        <name>add_wq</name>
        <qualifiedname>MEMORY_CONTROLLER::add_wq</qualifiedname>
        <param>
          <type>const request_type &amp;</type>
          <declname>pkt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/dram_controller.h" line="102" column="8" bodyfile="/github/workspace/src/dram_controller.cc" bodystart="318" bodyend="334"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classMEMORY__CONTROLLER_1af8c006486846a7abb3ebb73e698b50a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MEMORY_CONTROLLER::MEMORY_CONTROLLER</definition>
        <argsstring>(double freq_scale, int io_freq, double t_rp, double t_rcd, double t_cas, double turnaround, std::vector&lt; channel_type * &gt; &amp;&amp;ul)</argsstring>
        <name>MEMORY_CONTROLLER</name>
        <qualifiedname>MEMORY_CONTROLLER::MEMORY_CONTROLLER</qualifiedname>
        <param>
          <type>double</type>
          <declname>freq_scale</declname>
        </param>
        <param>
          <type>int</type>
          <declname>io_freq</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_rp</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_rcd</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_cas</declname>
        </param>
        <param>
          <type>double</type>
          <declname>turnaround</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classchampsim_1_1channel" kindref="compound">channel_type</ref> * &gt; &amp;&amp;</type>
          <declname>ul</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/dram_controller.h" line="107" column="3" bodyfile="/github/workspace/src/dram_controller.cc" bodystart="36" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classMEMORY__CONTROLLER_1ab608d7816ad9dd3b26e23ba6003658bb" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void MEMORY_CONTROLLER::initialize</definition>
        <argsstring>() override final</argsstring>
        <name>initialize</name>
        <qualifiedname>MEMORY_CONTROLLER::initialize</qualifiedname>
        <reimplements refid="classchampsim_1_1operable_1aadc42488425d7b667c423bb30198c827">initialize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/dram_controller.h" line="109" column="8" bodyfile="/github/workspace/src/dram_controller.cc" bodystart="186" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classMEMORY__CONTROLLER_1a6dff889149c71619d2c8881c3f720034" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>long</type>
        <definition>long MEMORY_CONTROLLER::operate</definition>
        <argsstring>() override final</argsstring>
        <name>operate</name>
        <qualifiedname>MEMORY_CONTROLLER::operate</qualifiedname>
        <reimplements refid="classchampsim_1_1operable_1ad061945ce3179fa00d77a6e30e97ad84">operate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/dram_controller.h" line="110" column="8" bodyfile="/github/workspace/src/dram_controller.cc" bodystart="44" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classMEMORY__CONTROLLER_1a146863c8a71fbdab520f173cdb3099e5" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void MEMORY_CONTROLLER::begin_phase</definition>
        <argsstring>() override final</argsstring>
        <name>begin_phase</name>
        <qualifiedname>MEMORY_CONTROLLER::begin_phase</qualifiedname>
        <reimplements refid="classchampsim_1_1operable_1a4f44b35a5dbd9855d7dde0fcd45e39d4">begin_phase</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/dram_controller.h" line="111" column="8" bodyfile="/github/workspace/src/dram_controller.cc" bodystart="197" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classMEMORY__CONTROLLER_1a77ccf2acedc84419b2a7ab124a93394b" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void MEMORY_CONTROLLER::end_phase</definition>
        <argsstring>(unsigned cpu) override final</argsstring>
        <name>end_phase</name>
        <qualifiedname>MEMORY_CONTROLLER::end_phase</qualifiedname>
        <reimplements refid="classchampsim_1_1operable_1a2942511f46fbf590b7531d299fe60dac">end_phase</reimplements>
        <param>
          <type>unsigned</type>
          <declname>cpu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/dram_controller.h" line="112" column="8" bodyfile="/github/workspace/src/dram_controller.cc" bodystart="213" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classMEMORY__CONTROLLER_1a3fc3dcfb493b979c8b7ddf21bb7e2349" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void MEMORY_CONTROLLER::print_deadlock</definition>
        <argsstring>() override final</argsstring>
        <name>print_deadlock</name>
        <qualifiedname>MEMORY_CONTROLLER::print_deadlock</qualifiedname>
        <reimplements refid="classchampsim_1_1operable_1a19019841fc4b9a0cb245552c1425bece">print_deadlock</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/dram_controller.h" line="113" column="8" bodyfile="/github/workspace/src/dram_controller.cc" bodystart="374" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="classMEMORY__CONTROLLER_1a012080d442a481dcc5693ad4a7bd9efc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t MEMORY_CONTROLLER::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>MEMORY_CONTROLLER::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/dram_controller.h" line="115" column="15" bodyfile="/github/workspace/src/dram_controller.cc" bodystart="371" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="classMEMORY__CONTROLLER_1a8be6a032392352cebbfad7f13de547f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t MEMORY_CONTROLLER::dram_get_channel</definition>
        <argsstring>(uint64_t address)</argsstring>
        <name>dram_get_channel</name>
        <qualifiedname>MEMORY_CONTROLLER::dram_get_channel</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/dram_controller.h" line="117" column="12" bodyfile="/github/workspace/src/dram_controller.cc" bodystart="341" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="classMEMORY__CONTROLLER_1a328c9b59f568b231a8d19c2202945780" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t MEMORY_CONTROLLER::dram_get_rank</definition>
        <argsstring>(uint64_t address)</argsstring>
        <name>dram_get_rank</name>
        <qualifiedname>MEMORY_CONTROLLER::dram_get_rank</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/dram_controller.h" line="118" column="12" bodyfile="/github/workspace/src/dram_controller.cc" bodystart="359" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="classMEMORY__CONTROLLER_1a989b8b579d9bf6d09c9c8e4121802168" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t MEMORY_CONTROLLER::dram_get_bank</definition>
        <argsstring>(uint64_t address)</argsstring>
        <name>dram_get_bank</name>
        <qualifiedname>MEMORY_CONTROLLER::dram_get_bank</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/dram_controller.h" line="119" column="12" bodyfile="/github/workspace/src/dram_controller.cc" bodystart="347" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="classMEMORY__CONTROLLER_1afdbd1761877336aa4d10ca5bd6fe4420" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t MEMORY_CONTROLLER::dram_get_row</definition>
        <argsstring>(uint64_t address)</argsstring>
        <name>dram_get_row</name>
        <qualifiedname>MEMORY_CONTROLLER::dram_get_row</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/dram_controller.h" line="120" column="12" bodyfile="/github/workspace/src/dram_controller.cc" bodystart="365" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="classMEMORY__CONTROLLER_1ae40d9cbe416cd01fa5a67e5ce9813513" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t MEMORY_CONTROLLER::dram_get_column</definition>
        <argsstring>(uint64_t address)</argsstring>
        <name>dram_get_column</name>
        <qualifiedname>MEMORY_CONTROLLER::dram_get_column</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/inc/dram_controller.h" line="121" column="12" bodyfile="/github/workspace/src/dram_controller.cc" bodystart="353" bodyend="357"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>MEMORY_CONTROLLER</label>
        <link refid="classMEMORY__CONTROLLER"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>champsim::operable</label>
        <link refid="classchampsim_1_1operable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>MEMORY_CONTROLLER</label>
        <link refid="classMEMORY__CONTROLLER"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>champsim::operable</label>
        <link refid="classchampsim_1_1operable"/>
      </node>
    </collaborationgraph>
    <location file="/github/workspace/inc/dram_controller.h" line="85" column="1" bodyfile="/github/workspace/inc/dram_controller.h" bodystart="86" bodyend="122"/>
    <listofallmembers>
      <member refid="classchampsim_1_1operable_1a3772b0e41a34c9c8384a44108d6f6165" prot="public" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>_operate</name></member>
      <member refid="classMEMORY__CONTROLLER_1ad2822094d0a0f475a4a9ce17e729472e" prot="private" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>add_rq</name></member>
      <member refid="classMEMORY__CONTROLLER_1a23199b7e0a153b5b5a98656b71ded8d1" prot="private" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>add_wq</name></member>
      <member refid="classMEMORY__CONTROLLER_1a146863c8a71fbdab520f173cdb3099e5" prot="public" virt="virtual"><scope>MEMORY_CONTROLLER</scope><name>begin_phase</name></member>
      <member refid="classMEMORY__CONTROLLER_1a4dd399298a7b4b62be46bd015b26e5ec" prot="private" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>channel_type</name></member>
      <member refid="classMEMORY__CONTROLLER_1a5e3c2229a8b5a258b58f455601a7602e" prot="public" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>channels</name></member>
      <member refid="classchampsim_1_1operable_1ad92c48b440cad47adad20c0b3008a541" prot="public" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>CLOCK_SCALE</name></member>
      <member refid="classchampsim_1_1operable_1a7c01174851f4ac835de1063844a335b6" prot="public" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>current_cycle</name></member>
      <member refid="classMEMORY__CONTROLLER_1ae2df6e9deff60570ed9e797ca216324b" prot="private" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>DRAM_DBUS_RETURN_TIME</name></member>
      <member refid="classMEMORY__CONTROLLER_1a57e0b51a1d365516470033fed1e4dc09" prot="private" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>DRAM_DBUS_TURN_AROUND_TIME</name></member>
      <member refid="classMEMORY__CONTROLLER_1a989b8b579d9bf6d09c9c8e4121802168" prot="public" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>dram_get_bank</name></member>
      <member refid="classMEMORY__CONTROLLER_1a8be6a032392352cebbfad7f13de547f3" prot="public" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>dram_get_channel</name></member>
      <member refid="classMEMORY__CONTROLLER_1ae40d9cbe416cd01fa5a67e5ce9813513" prot="public" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>dram_get_column</name></member>
      <member refid="classMEMORY__CONTROLLER_1a328c9b59f568b231a8d19c2202945780" prot="public" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>dram_get_rank</name></member>
      <member refid="classMEMORY__CONTROLLER_1afdbd1761877336aa4d10ca5bd6fe4420" prot="public" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>dram_get_row</name></member>
      <member refid="classMEMORY__CONTROLLER_1ab703a587e6506adf5f837478607be941" prot="private" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>DRAM_WRITE_HIGH_WM</name></member>
      <member refid="classMEMORY__CONTROLLER_1accd8c2cf10767dd48297f8c715aa5db0" prot="private" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>DRAM_WRITE_LOW_WM</name></member>
      <member refid="classMEMORY__CONTROLLER_1a77ccf2acedc84419b2a7ab124a93394b" prot="public" virt="virtual"><scope>MEMORY_CONTROLLER</scope><name>end_phase</name></member>
      <member refid="classMEMORY__CONTROLLER_1ab608d7816ad9dd3b26e23ba6003658bb" prot="public" virt="virtual"><scope>MEMORY_CONTROLLER</scope><name>initialize</name></member>
      <member refid="classMEMORY__CONTROLLER_1ae4c44be4349f946d9f935de14ff89cc4" prot="private" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>initiate_requests</name></member>
      <member refid="classchampsim_1_1operable_1a01987ce82bc1614f66f559e4857f78ba" prot="public" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>leap_operation</name></member>
      <member refid="classMEMORY__CONTROLLER_1af8c006486846a7abb3ebb73e698b50a9" prot="public" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>MEMORY_CONTROLLER</name></member>
      <member refid="classMEMORY__CONTROLLER_1a60766e7e4bca4ca76a4680cebccf5cb3" prot="private" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>MIN_DRAM_WRITES_PER_SWITCH</name></member>
      <member refid="classchampsim_1_1operable_1aae28abe79c0122d7eda58039f2235786" prot="public" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>operable</name></member>
      <member refid="classMEMORY__CONTROLLER_1a6dff889149c71619d2c8881c3f720034" prot="public" virt="virtual"><scope>MEMORY_CONTROLLER</scope><name>operate</name></member>
      <member refid="classMEMORY__CONTROLLER_1a3fc3dcfb493b979c8b7ddf21bb7e2349" prot="public" virt="virtual"><scope>MEMORY_CONTROLLER</scope><name>print_deadlock</name></member>
      <member refid="classMEMORY__CONTROLLER_1a02675f400d4702dd5bbaf30803dce6ae" prot="private" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>queues</name></member>
      <member refid="classMEMORY__CONTROLLER_1ad21382907b26d333a7f54dddc698ea48" prot="private" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>request_type</name></member>
      <member refid="classMEMORY__CONTROLLER_1a1f19adccb41645f6affdb5b47721967b" prot="private" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>response_type</name></member>
      <member refid="classMEMORY__CONTROLLER_1a012080d442a481dcc5693ad4a7bd9efc" prot="public" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>size</name></member>
      <member refid="classMEMORY__CONTROLLER_1a927f1491e33c8b0cf70d280997e7d831" prot="private" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>tCAS</name></member>
      <member refid="classMEMORY__CONTROLLER_1afd82250fbdf76a7b6f9b2e82e0558656" prot="private" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>tRCD</name></member>
      <member refid="classMEMORY__CONTROLLER_1a92bd3a5885fa8191b92a1be365ada22e" prot="private" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>tRP</name></member>
      <member refid="classchampsim_1_1operable_1a3464324490f33c24df3a11f4e30aa78b" prot="public" virt="non-virtual"><scope>MEMORY_CONTROLLER</scope><name>warmup</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
